<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LeetCode刷题笔记</title>
    <url>/post/23887/</url>
    <content><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="1、数组理论要点"><a href="#1、数组理论要点" class="headerlink" title="1、数组理论要点"></a>1、数组理论要点</h3><ul>
<li>  <strong>数组的元素是不能删除的，只能覆盖。</strong></li>
</ul>
<h3 id="2、重点题型"><a href="#2、重点题型" class="headerlink" title="2、重点题型"></a>2、重点题型</h3><h4 id="2-1、二分查找"><a href="#2-1、二分查找" class="headerlink" title="2.1、二分查找"></a>2.1、二分查找</h4><h5 id="2-1-1、普通二分"><a href="#2-1-1、普通二分" class="headerlink" title="2.1.1、普通二分"></a>2.1.1、普通二分</h5><ul>
<li><p>  <strong>适用条件</strong>：区间内元素是<strong>单调的、无重复的</strong></p>
</li>
<li><p><strong>算法要点</strong>：注意<strong>区间的不变量</strong></p>
<ul>
<li>  **<code>[left, right]</code>**：循环判断条件对应<code>(left &lt;= right)</code>，因为对于闭区间来说，<code>left</code>可能和<code>right</code>相等，同时对应的<code>right</code>值的更新应为<code>right = mid - 1</code>。</li>
<li>  **<code>[left, right)</code>**：循环判断条件对应<code>(left &lt; right)</code>，因为对于左闭右开区间来说，<code>left</code>不可能和<code>right</code>相等，同时对应的<code>right</code>值的更新应为<code>right = mid</code>。</li>
</ul>
</li>
<li><p><strong>算法模板</strong>：</p>
  <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//[left, right]</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">    <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;  <span class="comment">//可以避免left + right造成整形溢出</span></span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] &gt; target) right = mid - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//[left, right)</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = nums.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">    <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;  <span class="comment">//可以避免left + right造成整形溢出</span></span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] &gt; target) right = mid;</span><br><span class="line">    <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li>
<li><p><strong>相关题目</strong>：</p>
<ul>
<li><p><strong><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></strong></p>
  <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//// [left, right]</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) {</span><br><span class="line">            <span class="keyword">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; target) r = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></li>
<li><p><strong><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></strong></p>
  <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) {</span><br><span class="line">            <span class="keyword">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; target) r = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 此时 left &gt; right</span></span><br><span class="line">        <span class="comment">// 目标值在数组所有元素之前 </span></span><br><span class="line">        <span class="comment">// 目标值插入数组中的位置</span></span><br><span class="line">        <span class="comment">// 目标值在数组所有元素之后的情况</span></span><br><span class="line">        <span class="comment">// 都可以返回 l</span></span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></li>
<li><p><strong><a href="https://leetcode-cn.com/problems/sqrtx/">69. Sqrt(x)</a></strong></p>
  <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">        </span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
        <category>专业笔记</category>
        <category>算法刷题</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>技能</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown学习笔记</title>
    <url>/post/14358/</url>
    <content><![CDATA[<h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><p>Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档。Markdown编写的文档可以导出HTML、Word、Img、PDF等多种格式的文档。Markdown编写的文档后缀为.md，.markdown。推荐使用<a href="https://dongqing1903.github.io/post/44503.html">Typora</a>(链接中有关于<code>Typora</code>的下载以及添加图床、使用方法等说明)作为Markdown的编辑器。推荐对应的书<a href="https://pan.baidu.com/s/1BU2Q0hqfPKoBLK-A1j7jiQ">《了不起的Markdown》</a>(提取码：1234)。</p>
<blockquote>
<p>  <strong>说明</strong>：本学习笔记只记录Markdown推荐使用的语法，不对所有语法进行呈列。</p>
</blockquote>
<h2 id="第一章-Markdown基础语法"><a href="#第一章-Markdown基础语法" class="headerlink" title="第一章    Markdown基础语法"></a>第一章    Markdown基础语法</h2><h3 id="1、字体"><a href="#1、字体" class="headerlink" title="1、字体"></a>1、字体</h3><h4 id="1-1、标题"><a href="#1-1、标题" class="headerlink" title="1.1、标题"></a>1.1、标题</h4><ul>
<li>  <strong>使用#的语法</strong>：# + 空格 + 标题内容</li>
<li><strong>语法说明</strong>：<ul>
<li>  #的个数代表标题的级别。</li>
<li>  建议在#后加一个空格。</li>
<li>  Markdown最多支持前六级标题。</li>
</ul>
</li>
<li><strong>语法实例演示</strong>：<ul>
<li>  # ：一级标题</li>
<li>  ## ：二级标题</li>
<li>  ### ：三级标题</li>
<li>  ……</li>
<li>  ######：六级标题</li>
</ul>
</li>
<li><strong>使用规范</strong>：<ul>
<li>  要保持间距，建议标题的前后都要空1行（除非标题在文档开头）；<code>#</code>与标题文本之间也要有1个空格，否则会导致阅读困难。</li>
<li>  不要有多余的空格。建议标题要写在一行的开头，结尾也不要有空格。</li>
<li>  建议标题的结尾不要有标点符号，如句号、逗号、冒号、分号等。</li>
<li>  建议标题要尽量简短，这样方便引用，特别是当生成目录时。如果原拟的标题是一个长句，可以从长句中提取标题，而将长句作为标题下的内容。</li>
</ul>
</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  <code>Typora</code>编辑器中已经默认设置标题时，标题前后都会空一行，无需再留空行。</li>
<li>  <code>Typora</code>编辑器中可以使用快捷键<code>CTRL + 数字键</code>实现六级标题。</li>
</ul>
</blockquote>
<h4 id="1-2、粗体和斜体"><a href="#1-2、粗体和斜体" class="headerlink" title="1.2、粗体和斜体"></a>1.2、粗体和斜体</h4><ul>
<li>  <strong>粗体</strong>：由两对*包裹</li>
<li>  <strong>斜体</strong>：由一对*包裹</li>
<li>  <strong>实例演示</strong>：我是<code>**粗体**</code>，我是<code>*斜体*</code>。</li>
<li>  <strong>使用规范</strong>：在粗体和斜体语法标记的内部，建议不要有空格。</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：<code>Typora</code>编辑器中可以使用快捷键<code>CTRL + b</code>和<code>CTRL + i</code>来实现粗体和斜体的样式。</p>
</blockquote>
<h3 id="2、段落与换行"><a href="#2、段落与换行" class="headerlink" title="2、段落与换行"></a>2、段落与换行</h3><p><strong>Markdown中的段落由一行或多行文本组成，不同的段落之间使用空行来标记。</strong></p>
<ul>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  如果行与行之间没有空格，则会被视为同一段落。</li>
<li>  如果行与行之间有空行，则会被视为不同的段落。</li>
<li>  空行是指行内什么都没有，或者只有空格和制表符。</li>
<li>  如果想在段内换行，则需要在上一行的结尾插入<em>两个以上的空格</em>然后按回车键。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027091719148.png" alt="image-20211027091719148" style="zoom:67%;"></li>
<li><p><strong>使用规范</strong>：</p>
<ul>
<li>  当超过80个字符后进行换行。</li>
<li>  在一句话结束（。或！或？）之后换行。</li>
<li>  当URL较长时换行，通过在URL要换行的位置加一个换行符。</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：<a href="#6%E3%80%81%E9%93%BE%E6%8E%A5">链接的使用</a>在本章节第6小节介绍。</p>
</blockquote>
</li>
</ul>
<h3 id="3、列表"><a href="#3、列表" class="headerlink" title="3、列表"></a>3、列表</h3><p><strong>在Markdown中支持使用有序列表和无序列表，有序列表用数字序号+英文句号+空格+列表内容来标记，无序列表由*/+/- + 空格+列表内容标记。</strong></p>
<h4 id="3-1、有序列表："><a href="#3-1、有序列表：" class="headerlink" title="3.1、有序列表："></a>3.1、有序列表：</h4><ul>
<li><p>  <strong>使用语法</strong>：数字序号 + 英文句号 + 空格 + 列表内容</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027094817464.png" alt="image-20211027094817464" style="zoom: 67%;"></li>
</ul>
<h4 id="3-2、无序列表："><a href="#3-2、无序列表：" class="headerlink" title="3.2、无序列表："></a>3.2、无序列表：</h4><ul>
<li><p>  <strong>使用语法</strong>：*、+、-  + 空格 + 列表内容</p>
</li>
<li><p>  <strong>语法说明</strong>：*、+、- 的作用是一致的。</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027095914769.png" alt="image-20211027095914769" style="zoom:67%;">  </li>
</ul>
<h4 id="3-3、嵌套列表："><a href="#3-3、嵌套列表：" class="headerlink" title="3.3、嵌套列表："></a>3.3、嵌套列表：</h4><ul>
<li><p><strong>使用语法</strong>：</p>
<ul>
<li>  +  第一层列表</li>
<li>  TAB  +  第二层列表</li>
<li>  TAB  +  TAB  +  第三层列表</li>
</ul>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  列表中可以嵌套列表。</li>
<li>  有序列表和无序列表也可以相互嵌套。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027100700893.png" alt="image-20211027100700893" style="zoom:67%;"></li>
<li><p><strong>使用规范</strong>：</p>
<ul>
<li>  建议使用<code>-</code>来标记无序列表，因为<code>* </code>容易跟粗体和斜体混淆，而<code>+</code>不流行。</li>
<li>  如果一个列表中所有的列表项都没有换行，建议使用1个空格。</li>
<li>  如果列表项有换行，则建议给无序列表使用3个空格（根据自己设置<code>TAB</code>的缩进的位数来决定），给有序列表使用2个空格。</li>
<li>  如果一个列表中的每个列表项都只有1行，建议列表项之间不要有空行。</li>
<li>  如果列表项中有换行，建议在列表项之间空1行，这样会比较容易区分多行列表项的开始和结束。</li>
<li>  建议在列表前/后都空1行。</li>
<li>  <del>数字、字符、符号列表使用英文半角句号，句号后加空格。</del></li>
</ul>
</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  <code>Typora</code>编辑器中可以使用快捷键<code>CTRL + }</code> 和 <code>CTRL + {</code>实现无序列表和有序列表的样式。</li>
<li>  <code>Typora</code>编辑器对于列表项中有换行时，列表项之间添加空格的问题，<code>Typora</code>编辑器已经默认处理过了，同时关于有无换行时，有序列表和无序列表时空格的多少也无需考虑，<code>Typora</code>编辑器已经默认处理过了。</li>
</ul>
</blockquote>
<h3 id="4、分割线"><a href="#4、分割线" class="headerlink" title="4、分割线"></a>4、分割线</h3><ul>
<li><p>  <strong>使用语法</strong>：分隔线由3个以上的* 、-、_来标记。</p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  分隔线须使用至少3个以上的* 、-、_来标记。</li>
<li>  行内不能有其他的字符。</li>
<li>  可以在标记符中间加上空格。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027105031998.png" alt="image-20211027105031998"></p>
</li>
</ul>
<h3 id="5、图片"><a href="#5、图片" class="headerlink" title="5、图片"></a>5、图片</h3><ul>
<li><p>  <strong>插入图片的语法</strong>：![图片替代文字](图片地址)</p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  图片替代文字在图片无法正常显示时会比较有用，正常情况下可以为空。</li>
<li>  图片地址可以是本地图片的路径也可以是网络图片的地址。</li>
<li>  本地图片支持相对路径和绝对路径两种方式。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027105556796.png" alt="image-20211027105556796" style="zoom:67%;"></li>
</ul>
<h3 id="6、链接"><a href="#6、链接" class="headerlink" title="6、链接"></a>6、链接</h3><h4 id="6-1、文字链接"><a href="#6-1、文字链接" class="headerlink" title="6.1、文字链接"></a>6.1、文字链接</h4><p><strong>文字链接就是把链接地址直接写在文本中。</strong></p>
<ul>
<li><p>  <strong>使用语法</strong>：[链接文字](链接地址)</p>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027152641385.png" alt="image-20211027152641385"></p>
</li>
</ul>
<h4 id="6-2、引用链接"><a href="#6-2、引用链接" class="headerlink" title="6.2、引用链接"></a>6.2、引用链接</h4><p><strong>引用链接是把链接地址作为<code>变量</code>先在Markdown文件的页尾定义好，然后在正文中引用</strong></p>
<ul>
<li><p><strong>使用语法</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027153217156.png" alt="image-20211027153217156" style="zoom:67%;"></li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  链接标记可以有字母、数字、空格和标点符号。</li>
<li>  链接标记不区分大小写。</li>
<li>  定义的链接内容可以放在当前文件的任意位置，建议放在页尾。</li>
<li>  当链接地址为网络地址时要以 http/https开头，否则会被识别为本地地址。</li>
</ul>
</li>
</ul>
<h4 id="6-3、网址链接"><a href="#6-3、网址链接" class="headerlink" title="6.3、网址链接"></a>6.3、网址链接</h4><p><strong>在Markdown中，将网络地址或邮箱地址使用&lt;&gt;包裹起来会被自动转换为超链接。</strong></p>
<ul>
<li><p>  <strong>使用语法</strong>：&lt;URL 或 邮箱地址&gt;</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027154037298.png" alt="image-20211027154037298" style="zoom:67%;"></li>
</ul>
<h4 id="6-4、使用规范"><a href="#6-4、使用规范" class="headerlink" title="6.4、使用规范"></a>6.4、使用规范</h4><ul>
<li><p>  在Markdown中，链接标题的信息应该更丰富，从标题中应该可以知道链接的内容，要使用有意义的链接标题。</p>
</li>
<li><p>  建议使用&lt;&gt;包裹自动链接，这种方式更通用。</p>
</li>
<li><p>  自动链接要以http/https开头。</p>
</li>
</ul>
<h3 id="7、行内代码与代码块"><a href="#7、行内代码与代码块" class="headerlink" title="7、行内代码与代码块"></a>7、行内代码与代码块</h3><h4 id="7-1、行内代码"><a href="#7-1、行内代码" class="headerlink" title="7.1、行内代码"></a>7.1、行内代码</h4><ul>
<li><p>  <strong>使用语法</strong>：使用两个`包裹代码</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027155931029.png" alt="image-20211027155931029" style="zoom:80%;"></li>
</ul>
<h4 id="7-2、代码块"><a href="#7-2、代码块" class="headerlink" title="7.2、代码块"></a>7.2、代码块</h4><p><strong>因为代码块使用Tab键或4个空格开头的效果不够直观，很多扩展语法（如GFM）提供了<code>围栏代码块</code>，并且支持语法高亮。</strong></p>
<ul>
<li><p>  <strong>使用语法</strong>：```语种</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027171837966.png" alt="image-20211027171837966" style="zoom: 67%;"></li>
</ul>
<h5 id="7-3、使用规范"><a href="#7-3、使用规范" class="headerlink" title="7.3、使用规范"></a>7.3、使用规范</h5><ul>
<li>  <code>除行内代码可以使用`包裹以外，如果我们想转义或强调某些字符，也可以使用`包裹</code>。</li>
<li>  如果代码超过1行，请使用围栏代码块（扩展语法），并显式地声明语言，这样做便于阅读，并且可以显示语法高亮。</li>
<li>  很多Shell命令都要粘贴到终端中去执行，因此最好避免在Shell命令中使用任何<code>换行</code>操作；可以在行尾使用一个\，这样既能避免命令换行，又能提高源码的可读性。</li>
<li>  建议不要在没有输出内容的Shell命令前加$。在命令没有输出内容的情况下，​$是没有必要的，因为内容全是命令，我们不会把命令和输出的内容混淆。</li>
</ul>
<h3 id="8、引用"><a href="#8、引用" class="headerlink" title="8、引用"></a>8、引用</h3><ul>
<li><p>  <strong>使用语法</strong>：&gt; 引用内容</p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  多行引用也可以在每一行的开头都插入&gt;。</li>
<li>  在引用中可以嵌套引用。</li>
<li>  在引用中可以使用其他的Markdown语法。</li>
<li>  段落与换行的格式在引用中也是适用的。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027162721865.png" alt="image-20211027162721865"></p>
</li>
<li><p><strong>使用规范</strong>：</p>
<ul>
<li>  建议在引用的标记符号＞之后添加一个空格。</li>
<li>  建议每一行引用都使用符号＞。</li>
<li>  不要在引用中添加空行。</li>
</ul>
</li>
</ul>
<h3 id="9、转义"><a href="#9、转义" class="headerlink" title="9、转义"></a>9、转义</h3><p><strong>当我们想在Markdown文件中插入一些标记符号，但又不想让这些符号被渲染时，可以使用<code>\</code>进行转义。</strong></p>
<ul>
<li>  <strong>使用语法</strong>：\特殊符号</li>
<li>  <strong>支持转义的特殊字符</strong>：\，`，*，_，{}，[]，()，#，+，-，.，!</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：如果想显示一对`(反引号)，用转义字符无法实现，需要在两端分别添加一对反引号。</p>
</blockquote>
<h2 id="第二章-扩展语法GFM"><a href="#第二章-扩展语法GFM" class="headerlink" title="第二章    扩展语法GFM"></a>第二章    扩展语法GFM</h2><p><strong>在众多Markdown扩展语法中，GitHub Flavored Markdown（简称GFM）无疑是目前最流行的，它提供了包括表格、任务列表、删除线、围栏代码、Emoji等在内的标记语法。</strong></p>
<h3 id="1、删除线"><a href="#1、删除线" class="headerlink" title="1、删除线"></a>1、删除线</h3><ul>
<li><p>  <strong>使用语法</strong>：~~被删除的文字~~</p>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027164611866.png" alt="image-20211027164611866" style="zoom:80%;"></li>
</ul>
<h3 id="2、表情符号"><a href="#2、表情符号" class="headerlink" title="2、表情符号"></a>2、表情符号</h3><ul>
<li><p>  <strong>使用语法</strong>：:表情代码:</p>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027164753120.png" alt="image-20211027164753120"></p>
</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：更多的表情代码可以参考<a href="https://www.webfx.com/tools/emoji-cheat-sheet/">🎁表情符号备忘单 Github</a></p>
</blockquote>
<h3 id="3、自动连接"><a href="#3、自动连接" class="headerlink" title="3、自动连接"></a>3、自动连接</h3><p><strong>在标准语法中，由&lt;&gt;包裹的URL地址被自动识别并解析为超链接，使用GFM扩展语法则可以不使用&lt;&gt;包裹。</strong></p>
<ul>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027165241510.png" alt="image-20211027165241510" style="zoom:80%;"></li>
</ul>
<h3 id="4、表格"><a href="#4、表格" class="headerlink" title="4、表格"></a>4、表格</h3><ul>
<li><p><strong>使用语法</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027165353260.png" alt="image-20211027165353260"></p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  单元格使用|来分隔，为了阅读更清晰，建议最前和最后都使用|。</li>
<li>  单元格和|之间的空格会被移除。</li>
<li>  表头与其他行使用-来</li>
<li>表格对齐格式如下：<ul>
<li>  左对齐（默认）：:</li>
<li>  右对齐：-:</li>
<li>  居中对齐：:-:</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027165852710.png" alt="image-20211027165852710"></p>
</li>
<li><p><strong>使用规范</strong>：</p>
<ul>
<li>  在表格的前、后各空1行。</li>
<li>  在每一行最前和最后都使用|，每一行中的|要尽量都对齐。</li>
<li>  不要使用庞大复杂的表格，那样会难以维护和阅读。</li>
</ul>
</li>
</ul>
<h3 id="5、任务列表"><a href="#5、任务列表" class="headerlink" title="5、任务列表"></a>5、任务列表</h3><ul>
<li><p><strong>使用语法</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027170149173.png" alt="image-20211027170149173"></p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  任务列表以-+空格开头，由 [+空格/x+] 组成。</li>
<li>  x可以小写，也可以大写，有些编辑器可能不支持大写，所以为避免解析错误，推荐使用小写的x。</li>
<li>  当方括号中的字符为空格时，复选框是未选中状态，为x时是选中状态。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027170430536.png" alt="image-20211027170430536" style="zoom:67%;"></li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：<code>Typora</code>编辑器中使用任务列表的语法<code>-(空格)[(空格)](空格)内容</code></p>
</blockquote>
<h3 id="6、书签（锚点）"><a href="#6、书签（锚点）" class="headerlink" title="6、书签（锚点）"></a>6、书签（锚点）</h3><ul>
<li><p>  <strong>使用语法</strong>：[锚点描述](#锚点名)</p>
</li>
<li><p><strong>语法说明</strong>：</p>
<ul>
<li>  锚点名建议使用字母和数字，当然中文也是被支持的，但不排除有些网站支持得不够好。</li>
<li>  锚点名是区分英文大小写的。</li>
<li>  在锚点名中不能含有空格，也不能含有特殊字符。</li>
</ul>
</li>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027172705517.png" alt="image-20211027172705517"></p>
</li>
</ul>
<h2 id="第三章-排版技巧"><a href="#第三章-排版技巧" class="headerlink" title="第三章    排版技巧"></a>第三章    排版技巧</h2><h3 id="1、推荐的排版样式"><a href="#1、推荐的排版样式" class="headerlink" title="1、推荐的排版样式"></a>1、推荐的排版样式</h3><h4 id="1-1、关于空格"><a href="#1-1、关于空格" class="headerlink" title="1.1、关于空格"></a>1.1、关于空格</h4><p><strong>建议中文和英文之间加空格，中文/英文和数字之间也要加空格，不过有些编辑器和输入法（如百度输入法）会自动添加空隙，我们就没必要手动添加了，大家在使用时请多注意。</strong></p>
<ul>
<li><p><strong>需要加空格的情况:</strong></p>
<ol>
<li><p> 英文标点符号（如，.；：？）与后面的字符之间需要加空格，与前面的字符之间不需要加空格。</p>
</li>
<li><p>当在中文、英文中使用＞（半角）标识路径时，两边都需要加空格。</p>
<ul>
<li><p><strong>实例演示</strong>：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211027173855105.png" alt="image-20211027173855105"></p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>不加空格的情况</strong>：</p>
<ol>
<li> 中文标点符号和数字、中文、英文之间不需要添加空格。</li>
<li> 数字和百分号之间不需要添加空格。</li>
<li> 数字和单位符号之间不需要添加空格。</li>
<li> 英文和数字组合成的名字之间不需要添加空格。</li>
<li> 当/（半角）表示“或”、“路径”时，与前后的字符之间均不加空格</li>
<li> 负号后不加空格。</li>
</ol>
</li>
</ul>
<h4 id="1-2、半角和全角"><a href="#1-2、半角和全角" class="headerlink" title="1.2、半角和全角"></a>1.2、半角和全角</h4><p><strong>全角：中文标点符号是全角，占两个字节。</strong></p>
<p><strong>半角：英文标点符号和数字是半角，占1个字节。</strong></p>
<p><strong>全角：，。；：!#</strong></p>
<p><strong>半角：,.;:!#</strong></p>
<ul>
<li>  <strong>在中文排版中，要使用全角标点符号。</strong></li>
<li>  <strong>在英文排版中，要使用半角标点符号。</strong></li>
</ul>
<h4 id="1-3、正确的英文大小写"><a href="#1-3、正确的英文大小写" class="headerlink" title="1.3、正确的英文大小写"></a>1.3、正确的英文大小写</h4><p><strong>专有名词要使用正确的大小写，请参考它们的官方文档。</strong></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>专业笔记</category>
        <category>工具技能</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora的使用及图床的搭建</title>
    <url>/post/44503/</url>
    <content><![CDATA[<h2 id="Typora简介"><a href="#Typora简介" class="headerlink" title="Typora简介"></a>Typora简介</h2><p><strong>Typora是一款功能全面、简洁高效，而且又非常优雅的Markdown编辑器。它把源码编辑和效果预览合二为一，在输入标记之后随即生成预览效果，提供了<code>所见即所得 </code>的Markdown写作体验。</strong></p>
<p><strong>Typora的主要特征</strong>：</p>
<ul>
<li>  <strong>实时预览</strong>：传统的Markdown编辑器都有两个窗口，左边是源码，右边是渲染后的效果。Typora独辟蹊径，把源码编辑和效果预览合二为一，实现了真正的所见即所得。</li>
<li>  <strong>扩展语法</strong>：Typora不光支持<a href="https://dongqing1903.github.io/post/14358.html#%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95GFM">GFM</a>，还扩展了数学公式、流程图等功能。</li>
<li>  <strong>界面漂亮</strong>：默认支持6种主题，可自定义，好看又好用。</li>
<li>  <strong>文件转换</strong>：支持多种文件格式通过导入/导出功能跟.md格式相互转换。</li>
<li>  <del><strong>支持中文</strong>：支持中文，可以帮助大家更好地理解各项功能。</del></li>
<li>  <strong>视图模式</strong>：支持大纲和文档列表视图，方便在不同段落和不同文件之间进行切换。</li>
<li>  <del><strong>跨平台</strong>：支持macOS、Windows和Linux系统。</del></li>
<li>  <del><strong>目前免费</strong>：这么好用的编辑器竟然是免费的</del></li>
</ul>
<blockquote>
<p>  <strong>说明：</strong></p>
<ul>
<li>  <a href="https://www.typora.io/#download">Typora</a>官方下载地址</li>
<li>  本笔记是基于<code>Windows10</code>系统下的<code>0.9.98</code>版本的Typora进行记录的</li>
<li>  Markdown的基本语法在Typora上全都满足，可以阅读<a href="https://dongqing1903.github.io/post/14358.html">《Markdown学习笔记》</a>补充Markdown的基础语法知识</li>
</ul>
</blockquote>
<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="1、设置语言"><a href="#1、设置语言" class="headerlink" title="1、设置语言"></a>1、设置语言</h3><p><strong>在默认情况下，Typora会使用操作系统的语言，如果想要自定义语言，可以在Typora编辑器上执行如下操作：菜单栏  →【偏好设置】→【通用】→【语言】，选择语言后，重启Typora即可生效。</strong></p>
<h3 id="2、界面预览"><a href="#2、界面预览" class="headerlink" title="2、界面预览"></a>2、界面预览</h3><p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029134914405.png" alt="image-20211029134914405"></p>
<h3 id="3、主题"><a href="#3、主题" class="headerlink" title="3、主题"></a>3、主题</h3><p><strong>Typora提供了5款漂亮的主题供大家选择，每一个都很漂亮。可通过菜单栏上的【主题】进行已添加主题之间的切换，也可以到<a href="https://theme.typora.io//">官网主题</a>下载其他喜欢的未安装的主题进行安装，本人使用的是<a href="https://theme.typora.io/theme/Vue/">Vue主题</a>，关于主题的添加在后续章节<a href="#1%E3%80%81Typora%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0">添加主题</a>中介绍。</strong></p>
<h3 id="4、源代码模式"><a href="#4、源代码模式" class="headerlink" title="4、源代码模式"></a>4、源代码模式</h3><p><strong>Typora编辑器最具特色的功能是实时预览，当输入Markdown标记后，按回车键或把光标定位到别的段落就能够看到预览效果。由于<code>Typora</code>编辑器已经自身集成了《Markdown学习笔记》中推荐的在写作过程中关于空格、空行、换行等使用的场景，但有时需要另辟溪路，就需要打开源码模式，自行修改。</strong></p>
<p><strong>进入源码模式的方法：</strong></p>
<ul>
<li>  <strong>通过菜单栏操作</strong>：【视图】→ 【源代码模式】，如果菜单栏中的源代码模式选项前有√，表示当前编辑区显示的是源代码模式。</li>
<li>  <strong>通过快捷键操作</strong>：<code>CTRL + /</code>，在菜单栏中的源代码模式选项后面也有标注相对应的快捷键提示。</li>
<li>  <strong>通过编辑区左下角的源代码模式开关操作</strong>：点击<code>&lt;/&gt;</code>即可进入和退出源代码模式。</li>
</ul>
<h3 id="5、安装Pandoc"><a href="#5、安装Pandoc" class="headerlink" title="5、安装Pandoc"></a>5、安装Pandoc</h3><p><strong>Pandoc是一个标记语言转换工具，可实现不同标记语言间的格式转换。Typora默认只支持导出HTML和PDF格式的文件，通过安装Pandoc可以增加Typora编辑器的导入导出格式种类。</strong></p>
<p><strong>Pandoc的安装步骤</strong></p>
<ul>
<li>  <strong>下载安装包</strong>：根据自己的电脑操作系统下载最新的<a href="https://github.com/jgm/pandoc/releases/latest">Pandoc</a>安装包。</li>
<li>  <strong>安装过程</strong>：打开下载好的<code>.msi</code>文件，根据提示一步一步的安装即可，安装完成后重启Typora，就可以生效。</li>
</ul>
<h3 id="6、Typora偏好设置"><a href="#6、Typora偏好设置" class="headerlink" title="6、Typora偏好设置"></a>6、Typora偏好设置</h3><p><strong>通过菜单栏  →【文件】→【偏好设置】选项进入设置界面，偏好设置界面可以设置自动保存、系统语言、自动检查更新、自定义快捷键、外观设置（窗口样式、字体大小、状态栏、阅读速度、侧边栏、主题）、编辑器设置（默认缩进、成对字符的匹配）、图像设置以及Markdown的基础语法和扩展语法的设置等。</strong></p>
<p><strong>本人的设置如下图所示：</strong></p>
<ul>
<li><p><strong>通用设置：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029150125849.png" alt="image-20211029150125849"></p>
</li>
<li><p><strong>外观设置：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029150208911.png" alt="image-20211029150208911"></p>
</li>
<li><p><strong>编辑器设置：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029150233380.png" alt="image-20211029150233380"></p>
</li>
<li><p><strong>图像设置：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029150250508.png" alt="image-20211029150250508"></p>
</li>
<li><p><strong>Markdown设置：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029150324176.png" alt="image-20211029150324176"></p>
</li>
</ul>
<h2 id="高效地使用Markdown"><a href="#高效地使用Markdown" class="headerlink" title="高效地使用Markdown"></a>高效地使用Markdown</h2><p><strong>Typora支持GFM，还扩展了很多其他的功能（如支持数学公式、上标、下标、高亮、各种图表等），它几乎为每一种标记都提供了快捷的操作方式。</strong></p>
<h3 id="1、基础语法和GFM语法"><a href="#1、基础语法和GFM语法" class="headerlink" title="1、基础语法和GFM语法"></a>1、基础语法和GFM语法</h3><h4 id="1-1、编辑样式"><a href="#1-1、编辑样式" class="headerlink" title="1.1、编辑样式"></a>1.1、编辑样式</h4><p><strong>在Typora中通过执行：菜单栏  →【格式】→【加粗/斜体/代码（行内代码）/图像/超链接】可以添加或移除关于文字样式 的标记符号。如果没有选中文字，则只会添加标记符号；如果选中了文字，则会为选中的文字添加或移除标记符号。</strong></p>
<p><strong>相关样式的快捷键如下表：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">粗体</td>
<td align="center">CTRL + B</td>
</tr>
<tr>
<td align="center">斜体</td>
<td align="center">CTRL + I</td>
</tr>
<tr>
<td align="center">图片</td>
<td align="center">CTRL + SHIFT + I</td>
</tr>
<tr>
<td align="center">超链接</td>
<td align="center">CTRL + k</td>
</tr>
<tr>
<td align="center">删除线</td>
<td align="center">ALT + SHIFT + 5</td>
</tr>
</tbody></table>
<blockquote>
<p>  <strong>Tips</strong>：如果想使用自动补全表情符号的功能，需要到【偏好设置】中去激活：【文件】→【偏好设置】→【编辑器】→【触发自动完成】→  勾选【Emoji表情】，然后在输入<code>Emoji</code>标记语法时，Typora会自动给出补全信息。</p>
</blockquote>
<h4 id="1-2、编辑段落"><a href="#1-2、编辑段落" class="headerlink" title="1.2、编辑段落"></a>1.2、编辑段落</h4><p><strong>在Typora中通过执行：菜单栏 →【段落】→【段落/引用/表格/代码块/分隔线/有序列表/无序列表/任务列表】，可以添加或移除关于段落的标记符号。</strong></p>
<h5 id="1-2-1、段落与换行"><a href="#1-2-1、段落与换行" class="headerlink" title="1.2.1、段落与换行"></a>1.2.1、段落与换行</h5><p><strong>在Markdown中，换行符是比较让人困惑的，对此，Typora的官方建议如下：</strong></p>
<ul>
<li>  使用Typora的默认设置。</li>
<li>  在Typora混合界面（预览界面）写作。</li>
<li>  使用Enter键插入新段落，避免多插入空行。</li>
<li>  如果要插入强制换行符，请使用HTML标签<code>&lt;br/&gt;</code>。</li>
</ul>
<p><strong>最通用的插入强制换行符的方法有两种：</strong></p>
<ul>
<li>  在行尾加两个空格然后按回车键。</li>
<li>  使用HTML标签<code>&lt;br/&gt;</code>实现换行，在默认情况下，<code>&lt;br/&gt;</code>不显示，若想显示可以执行：菜单栏  →【编辑】→【空格与换行】→  勾选【显示<code>&lt;br/&gt;</code>】。</li>
</ul>
<p><strong>在Typora中，还提供了一种快速换行的方法，确认勾选保留单换行符：菜单栏  →【编辑】→【空格与换行】→  勾选【保留单换行符】，然后使用快捷键<code>Shift+Enter</code>换行。</strong></p>
<blockquote>
<p>  <strong>说明</strong>：上述换行符可能在导出/打印时被忽略，请到【偏好设置】→【Markdown】→【空格与换行】→【导出/打印】去设置是否忽略。</p>
</blockquote>
<p><strong>关于Typora中的段落需要知道下面几点内容：</strong></p>
<ul>
<li>  如果想要开始新的段落只需按<strong>一次</strong>回车键即可，所见即所得，查看源码你会发现Typora自动帮我们插入了一个空行。</li>
<li>  在默认情况下，段落的首行没有缩进，但如果你习惯了首行缩进，可以这样设置：菜单栏  →【编辑】→【空格与换行】→  勾选【首行缩进】。</li>
<li>  在表格或图表的前后插入段落不太方便，如果有此需求，可以在表格内单击鼠标右键  →【插入】→  选择【段落（上方）/段落（下方）】。</li>
</ul>
<h5 id="1-2-2、标题"><a href="#1-2-2、标题" class="headerlink" title="1.2.2、标题"></a>1.2.2、标题</h5><p><strong>对标题进行设置的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">设置<code>x</code>级标题</td>
<td align="center">CTRL + <code>x</code></td>
</tr>
<tr>
<td align="center">提升标题级别</td>
<td align="center">CTRL + =</td>
</tr>
<tr>
<td align="center">降低标题级别</td>
<td align="center">CTRL + -</td>
</tr>
<tr>
<td align="center">设置为普通文本</td>
<td align="center">CTRL + 0</td>
</tr>
</tbody></table>
<h5 id="1-2-3、列表"><a href="#1-2-3、列表" class="headerlink" title="1.2.3、列表"></a>1.2.3、列表</h5><p><strong>Typora支持有序列表、无序列表和任务列表，它们之间可以通过快捷键实现快速切换，还可以使用列表缩进功能快速调整缩进，使用起来非常方便。</strong></p>
<p><strong>列表操作相关的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">添加有序列表</td>
<td align="center">CTRL + SHIFT + [</td>
</tr>
<tr>
<td align="center">添加无序列表</td>
<td align="center">CTRL + SHIFT + ]</td>
</tr>
<tr>
<td align="center">增加缩进</td>
<td align="center">CTRL + ]</td>
</tr>
<tr>
<td align="center">减少缩进</td>
<td align="center">CTRL + [</td>
</tr>
</tbody></table>
<blockquote>
<p>  <strong>Tips</strong>：列表、代码块都可以使用“增加缩进”和“减少缩进”。</p>
</blockquote>
<h5 id="1-2-4、引用和水平分隔线"><a href="#1-2-4、引用和水平分隔线" class="headerlink" title="1.2.4、引用和水平分隔线"></a>1.2.4、引用和水平分隔线</h5><p><strong>引用和水平分割线相关的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">添加引用</td>
<td align="center">CTRL + SHIFT + Q</td>
</tr>
</tbody></table>
<h5 id="1-2-5、表格"><a href="#1-2-5、表格" class="headerlink" title="1.2.5、表格"></a>1.2.5、表格</h5><ul>
<li><p><strong>创建表格：</strong></p>
<p>  <strong>如果想创建一个表格，可以执行：菜单栏  →【段落】→【表格】→  输入列数和行数  →  单击【确定】按钮。</strong></p>
<p>  <strong>创建表格的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">创建表格</td>
<td align="center">CTRL + T</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>Tips</strong>：除上面所讲的方法外，还有一种可以快速创建表格的比较酷的方式：<strong>输入表头的标记语法</strong>，在最后一个|之后按回车键。</p>
</blockquote>
</li>
<li><p><strong>增加行/删除行、复制表格、格式化表格：</strong></p>
<p>  <strong>对于表格的增加、删除、复制和格式化操作，可以在表格中单击鼠标右键，选择【表格】，通过其列出的操作选项对表格进行操作，如下图所示：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029154234005.png" alt="image-20211029154234005"></p>
<p>  <strong>或者点击表格，表格右上方会显示操作菜单，如下图所示：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029160658421.png" alt="image-20211029160658421"></p>
</li>
<li><p><strong>快速调整表格：</strong></p>
<p>  <strong>如果想快速调整表格的行数、列数、对齐方式，可以点击表格，表格左上方和右上方都会显示操作菜单，直接进行操作即可，如下所示：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029160317697.png" alt="image-20211029160317697"></p>
<p>  <strong>如果想调整表格中行或列的顺序，可将光标放在行的最左边或列的最上边，待光标变成双向箭头后拖动即可调整顺序。</strong></p>
</li>
</ul>
<h5 id="1-2-6、代码"><a href="#1-2-6、代码" class="headerlink" title="1.2.6、代码"></a>1.2.6、代码</h5><ul>
<li><p><strong>插入围栏代码块：</strong></p>
<p>  <strong>如果想添加或删除围栏代码块的标记，可以执行：菜单栏  →【段落】→【代码块】。如果想把某段内容使用围栏代码块包裹，需要先选中该内容，然后执行上述操作。</strong></p>
<p>  <strong>插入围栏代码块的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">插入围栏代码块</td>
<td align="center">CTRL + SHIFT + K</td>
</tr>
</tbody></table>
<p>  <strong>如果想声明语言，将光标放在代码块中，在代码块右下角的【选择语言】中输入编程语言即可，如下图所示：</strong></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029161432641.png" alt="image-20211029161432641"></p>
</li>
<li><p><strong>显示代码行数：</strong></p>
<p>  <strong>代码块默认是不显示代码行数的，如果想显示，则需要执行：文件  →【偏好设置】→【代码块】→  勾选【显示行号】。</strong></p>
</li>
<li><p><strong>自动换行：</strong></p>
<p>  <strong>代码块中，如果代码过长，默认是会自动换行的，如果我们不希望代码自动换行，可以执行：文件  →【偏好设置】→【代码块】→  不勾选【代码块自动换行】。</strong></p>
</li>
</ul>
<h3 id="2、Typora扩展语法"><a href="#2、Typora扩展语法" class="headerlink" title="2、Typora扩展语法"></a>2、Typora扩展语法</h3><p><strong>Typora扩展了<code>下画线、数学公式、目录、脚注、上标和下标、图表操作</code>等功能，并且支持很多HTML标签，使排版格式变得更加齐全。</strong></p>
<h4 id="2-1、编辑样式"><a href="#2-1、编辑样式" class="headerlink" title="2.1、编辑样式"></a>2.1、编辑样式</h4><h5 id="2-1-1、下划线"><a href="#2-1-1、下划线" class="headerlink" title="2.1.1、下划线"></a>2.1.1、下划线</h5><p><strong>在Typora中，下画线是通过HTML的<code>&lt;u&gt;</code>标签实现的，其语法为<code>&lt;u&gt;内容&lt;/u&gt;</code>。</strong></p>
<p><strong>下划线快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">下划线</td>
<td align="center">CTRL + U</td>
</tr>
</tbody></table>
<h5 id="2-1-2、内联数学公式"><a href="#2-1-2、内联数学公式" class="headerlink" title="2.1.2、内联数学公式"></a>2.1.2、内联数学公式</h5><p><strong>如果想使用内联数学公式，需要先激活：【偏好设置】→【Markdown扩展语法】→  勾选【内联公式】→  重启Typora，内联数学公式的语法为<code>$数学公式$</code>。</strong></p>
<blockquote>
<p><strong>说明：</strong></p>
<ul>
<li>  Typora的内敛数学公式使用的是<code>LaTeX</code>排版。</li>
<li>  <code>LaTeX</code>排版的<a href="http://www.mohu.org/info/lshort-cn.pdf">pdf文档版的说明下载地址</a>。</li>
<li>  <code>LaTex</code>排版的<a href="http://mohu.org/info/symbols/symbols.htm">公式表示方法</a>。</li>
</ul>
</blockquote>
<h5 id="2-1-3、下标和上标"><a href="#2-1-3、下标和上标" class="headerlink" title="2.1.3、下标和上标"></a>2.1.3、下标和上标</h5><p><strong>如果想使用上标和下标，需要先激活：【偏好设置】→【Markdown扩展语法】→  勾选【下标】、【上标】→  重启Typora，其语法为<code>~下标内容~, ^上标内容^</code>。</strong></p>
<h5 id="2-1-4、高亮"><a href="#2-1-4、高亮" class="headerlink" title="2.1.4、高亮"></a>2.1.4、高亮</h5><p><strong>如果想使用高亮功能，需要先激活：【偏好设置】→【Markdown扩展语法】→勾选【高亮】→重启Typora，其语法为<code>==高亮内容==</code>。</strong></p>
<h5 id="2-1-5、注释"><a href="#2-1-5、注释" class="headerlink" title="2.1.5、注释"></a>2.1.5、注释</h5><p><strong>如果想添加注释，可以执行：菜单栏  →【格式】→【注释】。在编辑和预览时，注释的内容会被显示；<em>在导出PDF或Word时，则会被隐藏</em>，设置注释的语法为<code>&lt;!-- 注释内容 --&gt;</code>。</strong></p>
<blockquote>
<p>  <strong>说明</strong>：在以<code>hexo + github + next</code>搭建的博客首页中如果设置文章不是全文显示的话，就可以在想要显示部分的结尾通过<code>&lt;!-- more --&gt;</code>来实现。</p>
</blockquote>
<h5 id="2-1-6、清除样式"><a href="#2-1-6、清除样式" class="headerlink" title="2.1.6、清除样式"></a>2.1.6、清除样式</h5><p><strong>如果想快速清除样式，可以执行：菜单栏  →【格式】→【清除样式】。</strong></p>
<p><strong>清除样式的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">清除样式</td>
<td align="center">CTRL + \</td>
</tr>
</tbody></table>
<h4 id="2-2、编辑段落"><a href="#2-2、编辑段落" class="headerlink" title="2.2、编辑段落"></a>2.2、编辑段落</h4><h5 id="2-2-1、数学公式块"><a href="#2-2-1、数学公式块" class="headerlink" title="2.2.1、数学公式块"></a>2.2.1、数学公式块</h5><p><strong>专业的写作离不开数学公式，Typora对此做了很好的支持，其语法是<code>$$ 数学公式 $$</code>。</strong></p>
<p><strong>为某段内容添加或删除公式块，需要先选中该内容，然后执行：菜单栏  →【段落】→【公式块】。如果不选中任何内容，直接执行：菜单栏→【段落】→【公式块】，则会插入公式块标记。</strong></p>
<p><strong>公式块的快捷键:</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">公式块</td>
<td align="center">CTRL + SHIFT + M</td>
</tr>
</tbody></table>
<h5 id="2-2-2、目录"><a href="#2-2-2、目录" class="headerlink" title="2.2.2、目录"></a>2.2.2、目录</h5><p><strong>在Typora中，可以自动获取文章的标题来生成目录，当标题修改时，目录会随之自动更新，使用起来非常方便，其语法<code>[TOC]</code>。</strong></p>
<p><strong>语法说明：</strong></p>
<ul>
<li>  TOC是Table of Contents的缩写。</li>
<li>  在想插入目录的位置输入[TOC]，按回车键后就可以自动生成文章的目录了。</li>
</ul>
<h5 id="2-2-3、脚注"><a href="#2-2-3、脚注" class="headerlink" title="2.2.3、脚注"></a>2.2.3、脚注</h5><p><strong>添加脚注的语法：</strong></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029170134244.png" alt="image-20211029170134244"></p>
<p><strong>显示效果：</strong></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029170248368.png" alt="image-20211029170248368"></p>
<h5 id="2-2-4、图表"><a href="#2-2-4、图表" class="headerlink" title="2.2.4、图表"></a>2.2.4、图表</h5><p><strong>如果想使用图表功能，需要先激活：文件  →【偏好设置】→【Markdown扩展语法】→  勾选【图表】→  重启Typora。</strong></p>
<p><strong>需要注意如下几点：</strong></p>
<ul>
<li>  图表是Typora的扩展语法，标准的Markdown语法、CommonMark和GFM都不支持这一语法。</li>
<li>  如果想要把图表使用到更多的地方，推荐直接插入图片，不推荐在Typora中进行绘制。</li>
<li>  在Typora中，图表在导出HTML/PDF/ePub/docx等格式的文件时会被正常显示，但是其他的Markdown编辑器不一定支持此语法。</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：图表部分对于本来来说用的比较少，在此处就不记录了，如果需要可自行查阅《了不起Markdown》这本书的第<code>3.2.2</code>节的图表相关的内容，在实际使用中，可以通过第三方软件将相关的图表编辑好，然后以图片的方式插入到Markdown中，这种做法更方便、可靠。</p>
</blockquote>
<h2 id="实用的功能"><a href="#实用的功能" class="headerlink" title="实用的功能"></a>实用的功能</h2><h3 id="1、文件操作"><a href="#1、文件操作" class="headerlink" title="1、文件操作"></a>1、文件操作</h3><h4 id="1-1、复原历史版本"><a href="#1-1、复原历史版本" class="headerlink" title="1.1、复原历史版本"></a>1.1、复原历史版本</h4><p><strong>虽然Windows下的Typora不支持版本控制功能，但是可以恢复自动保存到草稿中的内容。</strong></p>
<p><strong>恢复的步骤：【文件】→【偏好设置】→【保存&amp;恢复】→单击【恢复未保存的草稿】→  找到以日期和文件名（或文件的第一个标题/句子）命名的草稿进行恢复。</strong></p>
<h4 id="1-2、自动保存"><a href="#1-2、自动保存" class="headerlink" title="1.2、自动保存"></a>1.2、自动保存</h4><p><strong>在Windows系统下，通过【文件】→【偏好设置】→【保存&amp;恢复】→  勾选【自动保存】。</strong></p>
<h4 id="1-3、导入-导出"><a href="#1-3、导入-导出" class="headerlink" title="1.3、导入/导出"></a>1.3、导入/导出</h4><p><strong>如果想把其他格式的文件转成Markdown文件，可以使用Typora的导入功能。</strong></p>
<p><strong>如果想把Markdown格式的文件转换成其他格式的文件，则可以使用导出功能。</strong></p>
<p><strong>具体步骤是，首先安装Pandoc，然后执行：菜单栏  →【文件】→【导入】/【导出】。</strong></p>
<h3 id="2、编辑操作"><a href="#2、编辑操作" class="headerlink" title="2、编辑操作"></a>2、编辑操作</h3><h4 id="2-1、复制与粘贴"><a href="#2-1、复制与粘贴" class="headerlink" title="2.1、复制与粘贴"></a>2.1、复制与粘贴</h4><p><strong>在默认情况下，在Typora中复制文本时，复制的是渲染后的格式。</strong></p>
<p><strong>如果想复制Markdown源码，可以执行：菜单栏  →【编辑】→【复制为Markdown】，或者选择要复制内容，单击鼠标右键，在弹出的菜单中选择【复制为Markdown】。</strong></p>
<p><strong>如果我们想把“复制Markdown源码”设置为默认的复制行为，可以执行：文件  →【偏好设置】→【默认复制行为】→  勾选【当复制纯文件时复制Markdown源码】。</strong></p>
<p><strong>如果想直接复制HTML源码，可以执行：菜单栏  →【编辑】→【复制为HTML代码】；如果想在粘贴时去掉所有格式，可以执行：菜单栏  →【编辑】→【粘贴为纯文本】。</strong></p>
<h4 id="2-2、查找和替换"><a href="#2-2、查找和替换" class="headerlink" title="2.2、查找和替换"></a>2.2、查找和替换</h4><p><strong>过快捷键<code>CTRL + F</code>调出查找面板，在查找面板上可以设置是否<code>区分大小写</code>和是否<code>查找整个单词</code>，默认都是否，如下图所示：</strong></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029172529332.png" alt="image-20211029172529332"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029181012177.png" alt="image-20211029181012177"></p>
<p><strong>可以在查找面板上切换上一个和下一个查找结果，也可以按回车键切换下一个。</strong></p>
<h4 id="2-3、跳转"><a href="#2-3、跳转" class="headerlink" title="2.3、跳转"></a>2.3、跳转</h4><p><strong>在Typora中，除通过侧边栏的大纲列表进行跳转外，还可以通过快捷键快速跳转到页首、页尾和选中的文本区域。</strong></p>
<p><strong>跳转的快捷键：</strong></p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">Windows系统</th>
</tr>
</thead>
<tbody><tr>
<td align="center">跑转到文首</td>
<td align="center">CTRL + HOME</td>
</tr>
<tr>
<td align="center">跑转到文末</td>
<td align="center">CTRL + END</td>
</tr>
<tr>
<td align="center">跳转到所选内容</td>
<td align="center">CTRL + J</td>
</tr>
</tbody></table>
<h4 id="2-4、图片操作"><a href="#2-4、图片操作" class="headerlink" title="2.4、图片操作"></a>2.4、图片操作</h4><p><strong>在Typora中，可以快速插入本地图片、复制插入的图片到指定文件夹、上传图片到图床、图片居中、调整图片大小等功能。</strong></p>
<p><strong>关于图片居中：当一个段落中只包含一张图片时，图片会居中对齐，否则会左对齐。</strong></p>
<h5 id="2-4-1、插入本地图片"><a href="#2-4-1、插入本地图片" class="headerlink" title="2.4.1、插入本地图片"></a>2.4.1、插入本地图片</h5><ul>
<li><p><strong>使用插入图片语法：</strong><code>![]()</code>。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029181909909.png" alt="image-20211029181909909"></p>
</li>
<li><p>  <strong>菜单栏  →【编格式】→【图像】→【插入本地图片】</strong></p>
</li>
<li><p>  <strong>直接拖动本地图片到编辑器中。</strong></p>
</li>
<li><p>  <strong>直接从剪切板中复制并粘贴到编辑器。</strong></p>
</li>
</ul>
<h5 id="2-4-2、管理本地图片"><a href="#2-4-2、管理本地图片" class="headerlink" title="2.4.2、管理本地图片"></a>2.4.2、管理本地图片</h5><ul>
<li><p><strong>复制图片到指定的文件夹：</strong></p>
<p>  <strong>在默认情况下，插入的本地图片链接是<code>原地址</code>，图片可能分散在电脑的各处，不便于管理。为了便于管理，我们可以将插入的本地图片自动复制到指定的文件夹中。</strong></p>
<p>  <strong>其操作步骤：菜单栏  →【格式】→【图像】→【当插入本地图片时】→【复制到文件夹…】，然后选择或新建一个文件夹用于存放插入的本地图片。</strong></p>
<p>  <strong>设置完成后，当我们再次插入本地图片时，图片就会被自动复制到之前选择的文件夹中了。</strong></p>
</li>
<li><p><strong>使用iPic上传到网络：</strong></p>
<p>  <strong>iPic是一个图床工具，可自动将本地图片上传到指定图床（支持微博、七牛云、又拍云、阿里云、腾讯云等图床），然后自动保存为Markdown格式的链接，非常方便。</strong></p>
<p>  <strong>免费版的iPic支持将图片匿名上传至微博图床，但这不利于隐私保护，不建议使用。本人使用的是<code>阿里云</code>图床。</strong></p>
<p>  <strong>假设你已经安装了iPic，若想把本地图片自动上传到图床，需要先在Typora中进行设置：【偏好设置】→【图片插入】→  勾选【允许根据YAML设置自动上传图片】。然后在插入的本地图片上，单击鼠标右键，选择【上传图片】就可以通过iPic上传到指定的图床了。</strong></p>
</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：<a href="#2%E3%80%81%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8OSS%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A%E7%9A%84%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D">基于阿里云的对象存储OSS实现的图床方法</a>在后面章节介绍。</p>
</blockquote>
<h5 id="2-4-3、全局设置"><a href="#2-4-3、全局设置" class="headerlink" title="2.4.3、全局设置"></a>2.4.3、全局设置</h5><p><strong>在默认情况下，插入图片时并没有什么特殊操作，但是我们可以在全局状态下，设置一些特殊的操作功能。具体是在【偏好设置】→【图片插入】中进行设置的，此处可选的操作如下：</strong></p>
<ul>
<li>  无特殊操作。</li>
<li>  复制图片到当前文件夹（./）。</li>
<li>  复制图片到./assets 文件夹。</li>
<li>  复制图片到./${filename}.assets 文件夹。</li>
<li>  复制到指定路径。</li>
</ul>
<h5 id="2-4-4、设置图片大小"><a href="#2-4-4、设置图片大小" class="headerlink" title="2.4.4、设置图片大小"></a>2.4.4、设置图片大小</h5><p><strong>在Typora中，支持使用<code>&lt;img&gt;</code>标签插入图片，也支持其对图片大小进行设置（理论上也支持其他属性的设置，但Typora在预览和编辑时可能会忽略图片大小之外的属性，这可能会影响导出效果）。</strong></p>
<p><strong>使用<code>&lt;img&gt;</code>标签的格式：</strong><code>&lt;img src="./imgs/小兔子.jpg" width="200px" height="200px" style="zoom:50%"/&gt;</code></p>
<h3 id="3、显示样式"><a href="#3、显示样式" class="headerlink" title="3、显示样式"></a>3、显示样式</h3><h4 id="3-1、3种视图模式"><a href="#3-1、3种视图模式" class="headerlink" title="3.1、3种视图模式"></a>3.1、3种视图模式</h4><p><strong>Typora支持3种视图模式：大纲视图、文件树视图和文档列表视图，这让我们能够方便地在不同段落和文件之间进行切换。</strong></p>
<ul>
<li>  <strong>大纲视图</strong>：方便查看全文的结构。</li>
<li>  <strong>文件树视图</strong>：方便切换当前目录及子目录中的文档。</li>
<li>  <strong>文档列表视图</strong>：方便切换当前目录中的文档。</li>
</ul>
<h4 id="3-2、沉浸式写作体验"><a href="#3-2、沉浸式写作体验" class="headerlink" title="3.2、沉浸式写作体验"></a>3.2、沉浸式写作体验</h4><p><strong>如果想拥有沉浸式写作体验，可以执行：菜单栏  →【视图】，并依次勾选下面的选项：</strong></p>
<ul>
<li>  <strong>打字机模式</strong>：光标始终位于屏幕的中间。</li>
<li>  <strong>专注模式</strong>：只高亮显示光标所在行，其余内容全部变灰。</li>
<li>  <strong>全屏</strong>：最大化文件窗口，排除其他软件的干扰。</li>
</ul>
<h2 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h2><h3 id="1、Typora主题添加"><a href="#1、Typora主题添加" class="headerlink" title="1、Typora主题添加"></a>1、Typora主题添加</h3><p><strong>本笔记以添加<code>Vue</code>主题为例，讲解添加步骤</strong>：</p>
<ol>
<li><p> 进入Typora官网下载<a href="https://theme.typora.io/theme/Vue/">Vue主题</a>，或者通过Typora的偏好设置选项中的<code>外观 -&gt; 主题 -&gt; 获取主题</code>进入Typora官网主题网站。</p>
</li>
<li><p> 进入Typora的偏好设置打开主题文件夹：菜单栏  →【文件】→【偏好设置】→【外观】→【主题】→【打开主题文件夹】。</p>
</li>
<li><p> 将下载好的<code>Vue主题</code>压缩包进行解压，将文件夹中的所有内容复制到<code>主题文件夹中</code>，重启Typora。</p>
</li>
<li><p> 切换主题：菜单栏  →【主题】→【Vue】，到此就切换成<code>Vue</code>主题了。</p>
</li>
</ol>
<h3 id="2、基于阿里云的对象存储OSS搭建图床的方法介绍"><a href="#2、基于阿里云的对象存储OSS搭建图床的方法介绍" class="headerlink" title="2、基于阿里云的对象存储OSS搭建图床的方法介绍"></a>2、基于阿里云的对象存储OSS搭建图床的方法介绍</h3><p><strong>虽然阿里云OSS不是免费的，但是一年只需要<code>RMB9.0</code>，还不到一杯奶茶的钱，就可以享受到稳定、可靠的图床了，免费的东西总得来说还是不可靠的，天下没有免费的午餐。</strong></p>
<p><strong>下面就把我从0开始搭建阿里云图床的过程一一介绍</strong>：</p>
<ol>
<li><p> 确保Typora的版本在<code>0.9.86</code>以上，如果不知道的话，可以通过<code>菜单栏 →【帮助】→【关于】</code>进行查看自己的Typora版本，如果版本过低，可以通过<code>菜单栏 →【帮助】→【检查更新】</code>进行升级</p>
</li>
<li><p>通过<code>菜单栏 →【文件】→【偏好设置】→【图像】</code>进行下图的设置：</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029192321925.png" alt="image-20211029192321925"></p>
</li>
<li><p>点击下载或更新（<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>使用外网下载速度会很快<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）：</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029192504357.png" alt="image-20211029192504357"></p>
</li>
<li><p> 注册<a href="https://account.aliyun.com/register/qr_register.htm?spm=5176.13735996.J_8058803260.6.361c3c60Hw8kka&amp;oauth_callback=https://www.aliyun.com/minisite/goods?source=5176.11533457&amp;userCode=vnk7s0ek&amp;type=copy">阿里云账号</a>并绑定实名身份</p>
</li>
<li><p>登陆阿里云，点击控制台</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029193616838.png" alt="image-20211029193616838"></p>
</li>
<li><p>选择对象存贮OSS，并开通服务</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029194022838.png" alt="image-20211029194022838"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029194127281.png" alt="image-20211029194127281"></p>
</li>
<li><p>点击概览，然后点击创建bucket</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029194424770.png" alt="image-20211029194424770"></p>
</li>
<li><p>输入创建信息</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211029201049.jpg" alt="微信图片_20211029201049"></p>
</li>
<li><p>根据自己的需求购买相应的资源包</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029201533237.png" alt="image-20211029201533237"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029201631995.png" alt="image-20211029201631995"></p>
</li>
<li><p>桌面上新建一个<code>txt</code>文本，并复制下面内容到里面</p>
 <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  "picBed": {</span><br><span class="line">    "uploader": "aliyun",</span><br><span class="line">    "aliyun": {</span><br><span class="line">    "accessKeyId": "",</span><br><span class="line">    "accessKeySecret": "",</span><br><span class="line">    "bucket": "", // 存储空间名</span><br><span class="line">    "area": "", // 存储区域代号</span><br><span class="line">    "path": "img/", // 自定义存储路径</span><br><span class="line">     "customUrl": "", // 自定义域名，注意要加 http://或者 https://</span><br><span class="line">     "options": "" // 针对图片的一些后缀处理参数 PicGo 2.2.0+ PicGo-Core 1.4.0+</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  "picgoPlugins": {}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>找<strong>accessKeyId</strong>和<strong>accessKeySecret</strong></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029202123686.png" alt="image-20211029202123686"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029203644871.png" alt="image-20211029203644871"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029203742905.png" alt="image-20211029203742905"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029202905978.png" alt="image-20211029202905978"></p>
</li>
<li><p>回到之前的oss对象存贮，点击之前创建的bucket，在点击概览，根据下面的图，使用自己的创建的bucket信息填充之前新建的txt</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029205648339.png" alt="image-20211029205648339"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029211409434.png" alt="image-20211029211409434"></p>
</li>
<li><p>将<code>步骤10</code>中的信息替换成自己的OSS信息，主要对<code>accessKeyId、accessKeySecret、bucket、area</code>，这里提供我的配置信息以供参考</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029212351764.png" alt="image-20211029212351764"></p>
</li>
<li><p>回到typora，通过<code>菜单栏 →【文件】→【偏好设置】→【图像】</code>打开配置文件，将<code>步骤10</code>新建的txt文件修改成自己的OSS信息的新内容替换掉配置文件中的内容，并保存重启Typora</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029212618038.png" alt="image-20211029212618038"></p>
</li>
<li><p>验证图片上传功能</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029213349636.png" alt="image-20211029213349636"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029213530899.png" alt="image-20211029213530899"></p>
</li>
<li><p>在编辑区添加图片，就会自动上传图片，以后写好的Markdown文档分享给别人是就不需要一起打包相应的插入图片了，直接分享Markdown源文件即可</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211029213207201.png" alt="image-20211029213207201"></p>
</li>
<li><p> 至此，基于阿里云的对象存储OSS的图床搭建就完成了，尽情享用吧<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
        <category>专业工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo + Github + Next的博客搭建</title>
    <url>/post/26832/</url>
    <content><![CDATA[<h2 id="主流博客框架简介"><a href="#主流博客框架简介" class="headerlink" title="主流博客框架简介"></a>主流博客框架简介</h2><p><strong>现在主流的博客框架有：<code>Wordpress,Hexo,Jekyllrb,Hugo</code></strong></p>
<ul>
<li><p><strong>Wordpress</strong>：</p>
<p>  Wordpress是一个基于PHP，用来搭建<strong>动态</strong>的博客的CMS系统。Wordpress也是一个开源的，可以使用Wordpress来制作网站，或者是App。Wordpress这个框架还是比较成熟的，使用的人也比较多，根据官网统计全球有38%的网站使用的都是Wordpress。</p>
<p>  Wordpress框架主要的作用是做新闻网站和博客网站，照这样分析，可以说是所有该类型的网站使用的都是Wordpress框架。</p>
</li>
<li><p><strong>Hexo</strong>：</p>
<p>  Hexo是基于JS，是一款快速、简洁且高效的博客框架。Hexo支持Markdown，Hexo部署起来是非常方便的，可以部署到github、码云或是是云主机。</p>
</li>
<li><p><strong>Jekyllrb</strong>：</p>
<p>  Jekyllrb是基于Ruby，同样也是一个静态网站生成器，它的使用与Hexo的使用方法很像，也是很简单的博客框架。</p>
</li>
<li><p><strong>Huge</strong>：</p>
<p>  Hugo是基于Go语言的，Hugo在安装、创建新的页面、更换主题等的操作也是很方便，同样，几行命令就可以搞定。</p>
</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：本笔记是基于<strong>Windows10</strong>系统搭建的<strong>Hexo</strong>框架博客，使用的是<strong>Hexo</strong>框架中的<strong>Next</strong>主题。</p>
</blockquote>
<h2 id="Hexo框架的安装"><a href="#Hexo框架的安装" class="headerlink" title="Hexo框架的安装"></a>Hexo框架的安装</h2><h3 id="1、相关安装包的下载和安装"><a href="#1、相关安装包的下载和安装" class="headerlink" title="1、相关安装包的下载和安装"></a>1、相关安装包的下载和安装</h3><h4 id="1-1、Git的下载和安装"><a href="#1-1、Git的下载和安装" class="headerlink" title="1.1、Git的下载和安装"></a>1.1、Git的下载和安装</h4><h5 id="1-1-1、Git的作用"><a href="#1-1-1、Git的作用" class="headerlink" title="1.1.1、Git的作用"></a>1.1.1、Git的作用</h5><p><strong>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理，也就是用来管理Hexo博客文章，上传到GitHub的工具。</strong></p>
<h5 id="1-1-2、Git的下载"><a href="#1-1-2、Git的下载" class="headerlink" title="1.1.2、Git的下载"></a>1.1.2、Git的下载</h5><ul>
<li>  <strong>官网下载</strong>：<a href="http://git-scm.com/download/win">下载链接</a></li>
<li>  <strong>淘宝镜像下载</strong>：<a href="https://npm.taobao.org/mirrors/git-for-windows/v2.33.0.windows.1/">下载链接</a></li>
<li>  <strong>Github下载</strong>：<a href="https://gitforwindows.org/">下载链接</a></li>
<li>  <strong>百度网盘下载</strong>：<a href="https://pan.baidu.com/s/1ncXfgf9OC0cMzIetQSaf2w">下载链接</a>(提取码：<code>1234</code>)</li>
</ul>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li><p>  根据自己<code>Windows</code>系统的位数，选择合适的安装包下载，官网下载以<code>Setup</code>结尾的即可，淘宝镜像下载<code>.exe</code>格式的即可。</p>
</li>
<li><p>  在国内通过访问官网下载的速度会很慢，可以<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>翻墙<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>通过官网下载或者借助<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>Github、淘宝镜像、百度网盘<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>直接下载安装包。</p>
</li>
<li><p>  本笔记是基于Git的<code>2.33.1</code>版本记录的，版本不同安装过程稍微不一样。</p>
</li>
</ul>
</blockquote>
<h5 id="1-1-3、Git的安装"><a href="#1-1-3、Git的安装" class="headerlink" title="1.1.3、Git的安装"></a>1.1.3、Git的安装</h5><ol>
<li> 双击下载好的<code>.exe</code>格式的安装包，点击<code>Next</code></li>
</ol>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030094032171.png" alt="image-20211030094032171"></p>
<ol start="2">
<li> 选择要安装的位置</li>
</ol>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030094210880.png" alt="image-20211030094210880"></p>
<ol start="3">
<li><p>选择组件</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030094556966.png" alt="image-20211030094556966"></p>
</li>
<li><p>开始菜单目录名设置</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030094722386.png" alt="image-20211030094722386"></p>
</li>
<li><p>选择Git的默认编辑器：默认选择<code>Vim</code>即可</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030094957389.png" alt="image-20211030094957389"></p>
</li>
<li><p>Git仓库在<code>git init</code>操作后的初始分支命名问题，Git默认是<code>master</code>，可自行设置成自己喜欢的命名，此处设置无伤大雅，直接默认即可，并且后期也是可以在命令行中修改，如果需要，请自行百度搜索修改命令语句</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030095330066.png" alt="image-20211030095330066"></p>
</li>
<li><p>选择使用命令行环境即可</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030095856073.png" alt="image-20211030095856073"></p>
</li>
<li><p>以下7步默认设置即可，直接<code>Next</code></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100002551.png" alt="image-20211030100002551"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100027336.png" alt="image-20211030100027336"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100049550.png" alt="image-20211030100049550"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100110335.png" alt="image-20211030100110335"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100135518.png" alt="image-20211030100135518"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100159669.png" alt="image-20211030100159669"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100215951.png" alt="image-20211030100215951"></p>
</li>
<li><p>直接默认设置，点击<code>install</code>进行安装即可</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100239331.png" alt="image-20211030100239331"></p>
</li>
<li><p>最后一步，点击完成</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100542077.png" alt="image-20211030100542077"></p>
</li>
</ol>
<h5 id="1-1-4、检验是否安装成功"><a href="#1-1-4、检验是否安装成功" class="headerlink" title="1.1.4、检验是否安装成功"></a>1.1.4、检验是否安装成功</h5><p><strong>回到电脑桌面，鼠标右击，在所列出的选项中会出现<code>Git GUI Here</code>和<code>Git Bash Here</code>则代表Git安装成功</strong></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030100948843.png" alt="image-20211030100948843"></p>
<h5 id="1-1-5、Git初始化"><a href="#1-1-5、Git初始化" class="headerlink" title="1.1.5、Git初始化"></a>1.1.5、Git初始化</h5><ul>
<li><p><strong>注册Github账号</strong>：</p>
<ol>
<li><p> 登陆<a href="https://github.com/">Github官网</a></p>
</li>
<li><p>注册步骤如下图，可自行注册，不必参考下图</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030203129955.png" alt="image-20211030203129955"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030203800029.png" alt="image-20211030203800029"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030204009682.png" alt="image-20211030204009682"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030204318493.png" alt="image-20211030204318493"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030204509595.png" alt="image-20211030204509595"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030204656951.png" alt="image-20211030204656951"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030204754586.png" alt="image-20211030204754586"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030205134826.png" alt="image-20211030205134826"></p>
</li>
</ol>
</li>
<li><p><strong>Git初始化</strong>：在桌面右击选择<code>Git Bash Here</code>打开命令行进行如下操作</p>
<ol>
<li><p> <strong>设置用户名</strong>：在<code>Git Bash</code>命令行中输入<code>git  config -- global  user.name  'Github注册的用户名'</code>，例如：<code>git config --global user.name dongqing1234</code>。</p>
</li>
<li><p> <strong>设置用户邮箱</strong>：在<code>Git Bash</code>命令行中输入<code>git  config -- global  user.email  'GitHub注册的邮箱'</code>，例如：<code>git config --global user.email "shoudongj@gmail.com"</code>。</p>
</li>
<li><p>配置ok后，在命令行中输入<code>git config --list</code>进行验证是否配置成功。</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030231211745.png" alt="image-20211030231211745"></p>
</li>
</ol>
</li>
</ul>
<h5 id="1-1-6、使用SSH密钥链接Github"><a href="#1-1-6、使用SSH密钥链接Github" class="headerlink" title="1.1.6、使用SSH密钥链接Github"></a>1.1.6、使用SSH密钥链接Github</h5><ol>
<li><p> <strong>查看是否存在SSH密钥</strong>：在<code>Git Bash</code>命令行中，执行<code>cd ~/.ssh</code>命令，如果<code>.ssh</code>目录中<strong>存在<code>id_rsa, id_rsa.pub</code>两个文件</strong>，则<strong>不需要执行第2步操作</strong>，否则需要进行第2步操作。</p>
</li>
<li><p><strong>创建一对新的SSH密钥</strong>：</p>
<ul>
<li><p>在命令行中执行如下命令，创建密钥</p>
  <figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "your_email@example.com"</span><br><span class="line"><span class="meta">#</span><span class="bash">这将按照你提供的邮箱地址，创建一对密钥</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span><br><span class="line"><span class="meta">#</span><span class="bash">此处直接回车，则将密钥按默认文件进行存储</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>根据提示，需要输入密码和确认密码（其实可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车即可）。相关提示如下：</p>
  <figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class="line">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>全部完成后，会输出如下信息：</p>
  <figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">Your identification has been saved in /c/Users/you/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>命令行代码实例图：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030235120833.png" alt="image-20211030235120833"></p>
</li>
</ul>
</li>
<li><p><strong>在GitHub账户中添加自己的公钥</strong></p>
<ul>
<li><p>  在命令行输入<code>clip &lt; ~/.ssh/id_rsa.pub</code>命令，将公钥的内容复制到系统粘贴板中。</p>
</li>
<li><p>登陆<a href="https://github.com/">Github</a>，进入个人账户设置，选择<code>SSH与GPG公钥</code>。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030233958062.png" alt="image-20211030233958062"></p>
</li>
<li><p>点击<code>新建SSH密钥</code>。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030234331181.png" alt="image-20211030234331181"></p>
</li>
<li><p>将复制好的密钥粘贴到到<code>密钥</code>输入框中。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030235705776.png" alt="image-20211030235705776"></p>
</li>
<li><p>输入Github密码即可。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031000032736.png" alt="image-20211031000032736"></p>
</li>
<li><p>最后进行测试，在命令行中输入<code>ssh -T git@github.com</code>命令，如果需要提供验证密码，输入上一步的密码即可。</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031001205880.png" alt="image-20211031001205880"></p>
</li>
</ul>
</li>
</ol>
<h4 id="1-2、Node-js的下载和安装"><a href="#1-2、Node-js的下载和安装" class="headerlink" title="1.2、Node.js的下载和安装"></a>1.2、Node.js的下载和安装</h4><h5 id="1-2-1-Node-js的作用"><a href="#1-2-1-Node-js的作用" class="headerlink" title="1.2.1 Node.js的作用"></a>1.2.1 Node.js的作用</h5><p><strong>在前面<a href="#%E4%B8%BB%E6%B5%81%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B">主流博客框架简介</a>中讲到<code>Hexo</code>框架是基于<code>JS</code>开发的，所以<code>Hexo</code>框架的配置需要在<code>JS</code>的环境中修改，而Node.js 是一个基于 Chrome V8 引擎的JavaScirpt 运行环境</strong>。</p>
<h5 id="1-2-2-Node-js的下载"><a href="#1-2-2-Node-js的下载" class="headerlink" title="1.2.2 Node.js的下载"></a>1.2.2 Node.js的下载</h5><p><strong>官网下载</strong>：<a href="https://nodejs.org/zh-cn/download/">下载链接</a></p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  下载长期维护版的<code>.msi</code>格式的安装包即可，比较稳定可靠。</li>
<li>  本笔记是基于Node.js的<code>16.13.0</code>版本记录的。</li>
</ul>
</blockquote>
<h5 id="1-2-3、Node-js的安装"><a href="#1-2-3、Node-js的安装" class="headerlink" title="1.2.3、Node.js的安装"></a>1.2.3、Node.js的安装</h5><p><strong>除了安装目录按照自己的需求修改外，其他的全部按照默认设置安装即可。</strong></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030153815819.png" alt="image-20211030153815819"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030153907374.png" alt="image-20211030153907374"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030154010207.png" alt="image-20211030154010207"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030154057081.png" alt="image-20211030154057081"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030154300341.png" alt="image-20211030154300341"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030154351718.png" alt="image-20211030154351718"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030154441602.png" alt="image-20211030154441602"></p>
<h5 id="1-2-4、检测Node-js安装是否成功"><a href="#1-2-4、检测Node-js安装是否成功" class="headerlink" title="1.2.4、检测Node.js安装是否成功"></a>1.2.4、检测Node.js安装是否成功</h5><p><strong>使用安装好的Git进行检测，在电脑桌面右击选择<code>Git Bash Here</code>进入Git的命令行模式，输入<code>node -v</code>查看Node.js的版本，如果输出版本号就表示安装成功。</strong></p>
<h3 id="2、Hexo框架的安装"><a href="#2、Hexo框架的安装" class="headerlink" title="2、Hexo框架的安装"></a>2、Hexo框架的安装</h3><blockquote>
<p>  <strong>说明</strong>：接下来的所有<strong>命令操作</strong>都是在<code>Git Bash</code>中进行的。</p>
</blockquote>
<h4 id="2-1、检测"><a href="#2-1、检测" class="headerlink" title="2.1、检测"></a>2.1、检测</h4><h5 id="2-1-1、检测Node-js的版本"><a href="#2-1-1、检测Node-js的版本" class="headerlink" title="2.1.1、检测Node.js的版本"></a>2.1.1、检测Node.js的版本</h5><p><strong>在<code>Git Bash</code>命令行中，输入<code>node -v</code>，输出版本号代表安装成功。</strong></p>
<h5 id="2-1-2、检测npm的版本"><a href="#2-1-2、检测npm的版本" class="headerlink" title="2.1.2、检测npm的版本"></a>2.1.2、检测npm的版本</h5><p><strong>在<code>Git Bash</code>命令行中，输入<code>npm -v</code>，输出版本号代表安装成功。</strong></p>
<blockquote>
<p>  <strong>拓展</strong>：    npm是随同Node.js一起安装的<code>包管理工具</code>，类似于360软件管家，能解决Node.js代码部署上的很多问题，常见的使用场景有以下几种：</p>
<ul>
<li>  允许用户从npm服务器下载别人编写的第三方包到本地使用。</li>
<li>  允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。</li>
<li>  允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。</li>
</ul>
</blockquote>
<h4 id="2-2、安装淘宝的镜像源cnpm"><a href="#2-2、安装淘宝的镜像源cnpm" class="headerlink" title="2.2、安装淘宝的镜像源cnpm"></a>2.2、安装淘宝的镜像源<code>cnpm</code></h4><p><strong>因为npm的服务器位于国外可能会影响安装，可以借助淘宝做的国内镜像cnpm下载所需要的package包</strong>。</p>
<p><strong>借助npm安装cnpm</strong>：在<code>Git Bash</code>命令行中，输入</p>
<p> <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>即可安装。</p>
<p><strong>检验是否安装成功</strong>：</p>
<ul>
<li>  在<code>Git Bash</code>命令行中，输入<code>cnpm</code>，输出cnpm信息</li>
<li>  在<code>Git Bash</code>命令行中，输入<code>cnpm -v</code>，输出cnpm版本信息</li>
</ul>
<p><strong>以上两个操作都返回正确信息代表安装成功。</strong></p>
<blockquote>
<p>  <strong>说明</strong>：如果错误就重来，因为连接可能不稳定。</p>
</blockquote>
<h4 id="2-3、安装Hexo框架"><a href="#2-3、安装Hexo框架" class="headerlink" title="2.3、安装Hexo框架"></a>2.3、安装Hexo框架</h4><p>**在<code>Git Bash</code>命令行中，输入<code>cnpm install -g hexo-cli</code>**。</p>
<p><strong>检验是否安装成功</strong>：在<code>Git Bash</code>命令行中，输入<code>hexo -v</code>，输出Hexo的版本信息代表安装成功。</p>
<p><strong>本人<code>hexo -v</code>的返回信息</strong>：</p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030191225379.png" alt="image-20211030191225379"></p>
<blockquote>
<p>  <strong>说明</strong>：如果错误就重来，因为连接可能不稳定。</p>
</blockquote>
<h4 id="2-4、初始化过程"><a href="#2-4、初始化过程" class="headerlink" title="2.4、初始化过程"></a>2.4、初始化过程</h4><p><strong>在本地建立博客文件夹，文件夹的名字根据自己的喜好设置即可，本人设置成<code>Blog</code>，后面所有的插件安装等都是基于这个博客文件夹，如果重建博客，只需要删除博客文件夹即可</strong>。</p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  一定要保证所建的博客文件夹中为<strong>空文件夹</strong>，里面无任何内容，否则接下来执行<code>hexo init</code>操作会报错，会提示文件夹非空。</li>
<li>  本笔记中所说的<strong>站点目录</strong>就是新建的<strong>博客文件夹</strong>，站点就是博客。</li>
</ul>
</blockquote>
<p><strong>接下来的操作步骤</strong>：</p>
<ol>
<li><p>在新建的博客文件夹<code>Blog</code>中，右击鼠标，选择<code>Git Bash Here</code>进入Git命令行模式，要确保当前是在新建的博客文件夹中。</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030192841049.png" alt="image-20211030192841049"></p>
</li>
<li><p>在命令行中输入<code>hexo init</code>后回车，对应的博客文件夹中就会新增很多关于Hexo框架的文件。</p>
 <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030193055972.png" alt="image-20211030193055972" style="zoom:80%;"></li>
<li><p>在命令行中输入<code>hexo s</code>启动Hexo，在本地浏览器输入<a href="http://localhost:4000/">http://localhost:4000</a>即可在本地4000端口浏览自己的网站。</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030193517056.png" alt="image-20211030193517056"></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030193827087.png" alt="image-20211030193827087"></p>
</li>
</ol>
<h2 id="部署网站到Github"><a href="#部署网站到Github" class="headerlink" title="部署网站到Github"></a>部署网站到Github</h2><h3 id="1、创建Github仓库"><a href="#1、创建Github仓库" class="headerlink" title="1、创建Github仓库"></a>1、创建Github仓库</h3><p><strong>创建步骤</strong>：</p>
<ol>
<li><p>在Github网站首页点击<strong>新建仓库</strong></p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030205535299.png" alt="image-20211030205535299"></p>
</li>
<li><p>以<code>自己的Github用户名.github.io</code>命名仓库名称，例如：<code>lisi.github.io</code>，同时一定要设置成公有，否则会造成博客访问不了</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030210513742.png" alt="image-20211030210513742"></p>
</li>
<li><p>记住下图的地址，后面需要用到</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030215905006.png" alt="image-20211030215905006"></p>
</li>
</ol>
<h3 id="2、配置站点配置文件"><a href="#2、配置站点配置文件" class="headerlink" title="2、配置站点配置文件"></a>2、配置站点配置文件</h3><ol>
<li><p> 在创建的博客文件夹<code>Blog</code>中，找到站点的配置文件<code>_config.yml</code>，使用本地常用的编辑器打开进行配置站点。</p>
</li>
<li><p>在打开的站点配置文件<code>_config.yml</code>中，搜索<code>deploy</code>找到下图中的代码段</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030221026359.png" alt="image-20211030221026359"></p>
</li>
<li><p>将该代码段改成下图的代码，需要添加<code>repo、branch</code>项</p>
<ul>
<li>  <code>type</code>项的内容建议写成<code>git</code>便于识别；</li>
<li>  <code>repo</code>项的内容是仓库的地址，对应第3步中的地址，直接复制粘贴过来即可；</li>
<li>  <code>branch</code>项的内容设置为之前安装Git时自行设置的分支名字即可，默认设置是<code>master</code>；</li>
</ul>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:dongqing1234/dongqing1234.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure>

<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211030221718860.png" alt="image-20211030221718860"></p>
</li>
<li><p>更改后保存并退出，在<code>Git Bash</code>中输入<code>hexo d</code>将本地文件部署到自己的Github中新建的仓库中，命令执行完后可以通过访问<a href="https://自己的用户名.github.io/">https://自己的用户名.github.io</a>，从远端访问自己的博客站点</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031001809287.png" alt="image-20211031001809287"></p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  在之前在<code>Git Bash</code>中执行<code>hexo s</code>后，键盘输入<code>CTRL + C</code>即可退出。</li>
<li>  执行<code>hexo d</code>会提示<code>nothing to commit, working tree clean</code>，只需要依次执行<code>hexo clean, hexo g, hexo d</code>即可。</li>
<li>  执行完<code>hexo d</code>后，需要等一会才会完全部署到Github仓库中，因为Github的服务器部署在国外。</li>
<li>  执行完<code>hexo d</code>后如果报错<code>ERROR Deployer not found: git</code>，需要进行安装<code>hexo-deployer-git</code>插件，在博客文件夹下进入Git命令行输入<code>npm install --save hexo-deployer-git </code>，等待安装成功即可，然后再次执行<code>hexo d</code>。</li>
<li>Hexo的命令：<ul>
<li>  <code>hexo clean</code>：清除数据库缓存</li>
<li>  <code>hexo g</code>：生成静态网站</li>
<li>  <code>hexo s</code>：开启本地Hexo服务器，便于在本地预览站点</li>
<li>  <code>hexo d</code>：将现在的文件部署到Github中</li>
</ul>
</li>
</ul>
</blockquote>
</li>
</ol>
<h2 id="更换Next主题"><a href="#更换Next主题" class="headerlink" title="更换Next主题"></a>更换Next主题</h2><p><strong>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 <code>themes</code> 目录下， 然后修改下站点配置文件即可。具体到 NexT 来说，使用git克隆最新版本的Next主题的安装步骤如下</strong>：</p>
<ul>
<li><p>在站点目录下右击打开<code>Git Bash Here</code>，输入命令</p>
<p>  <code>git clone git://github.com/theme-next/hexo-theme-next themes/next</code>将主题克隆到本地站点中</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031090107552.png" alt="image-20211031090107552"></p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  如果不成功，多次重复实验即可。</li>
<li>  注意是在<strong>站点目录</strong>下执行这条命令</li>
</ul>
</blockquote>
</li>
<li><p>将站点目录下**_config.yml<strong>里</strong>theme**的名称由<code>landscape</code>修改为<code>next</code>，然后保存退出</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031083910234.png" alt="image-20211031083910234"></p>
</li>
<li><p>在命令行中依次输入<code>hexo clean, hexo s</code>就可以预览站点的Next主题</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031091240436.png" alt="image-20211031091240436"></p>
</li>
</ul>
<h2 id="优化Next主题"><a href="#优化Next主题" class="headerlink" title="优化Next主题"></a>优化Next主题</h2><h3 id="1、更改Scheme外观"><a href="#1、更改Scheme外观" class="headerlink" title="1、更改Scheme外观"></a>1、更改Scheme外观</h3><p><strong>Scheme 是Next提供的一种特性，借助于Scheme，Next提供多种不同的外观，几乎所有的配置都可以在Scheme 之间共用，目前Next支持4种Scheme</strong>：</p>
<ul>
<li>  Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>
<li>  Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>
<li>  Pisces - 双栏 Scheme，小家碧玉似的清新</li>
<li>  Gemini - 导航栏、头像等基本信息在侧边栏上显示</li>
</ul>
<p><strong>本人选择的是<code>Gemini</code>，简单方便</strong>。</p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031120446674.png" alt="image-20211031120446674"></p>
<h3 id="2、更改站点基本信息"><a href="#2、更改站点基本信息" class="headerlink" title="2、更改站点基本信息"></a>2、更改站点基本信息</h3><ul>
<li><p>打开<strong>站点目录</strong>下的站点配置文件<code>_config.yml</code>，然后查找<code>Site</code>，对应下图改成自己需要的即可，最后保存</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031094223392.png" alt="image-20211031094223392"></p>
</li>
<li><p>打开<strong>主题目录</strong>下的<code>languages</code>文件夹，查看是否存在<code>zh-Hans.yml</code>文件，如果不存在将<code>zh-CN.yml</code>重命名<code>zh-Hans.yml</code></p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031093735188.png" alt="image-20211031093735188"></p>
</li>
<li><p>在站点目录下进入<code>Git Bash</code>命令行，依次执行<code>hexo clean, hexo s</code>即可在浏览器通过<a href="http://localhost:4000/">本地端口</a>看到站点的变化</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031095109539.png" alt="image-20211031095109539"></p>
</li>
</ul>
<h3 id="3、设置主题菜单"><a href="#3、设置主题菜单" class="headerlink" title="3、设置主题菜单"></a>3、设置主题菜单</h3><p><strong>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景。</strong></p>
<p><strong>主题菜单设置步骤：</strong></p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li>  本笔记所说的<strong>站点</strong>配置文件<code>_config.yml</code>指的是站点目录下的<code>_config.yml</code></li>
<li>  本笔记所说的<strong>主题</strong>配置文件<code>_config.yml</code>指的是站点目录下<code>themes</code>目录下的<code>next</code>目录下的<code>_config.yml</code></li>
</ul>
</blockquote>
<p>编辑<code>主题配置文件</code>，查找<code>menu</code>定位到主题菜单配置处，修改如下内容；</p>
<ol>
<li><p>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name </code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译</p>
<p> 菜单实例配置：不需要的菜单就注销掉</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user  //不需要的就注销掉</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>设置菜单项的显示文本，在第1步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/zh-Hans.yml</code> 中</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益</span> <span class="number">404</span></span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<h3 id="4、设置侧边栏"><a href="#4、设置侧边栏" class="headerlink" title="4、设置侧边栏"></a>4、设置侧边栏</h3><p><strong>可以通过修改 <code>主题配置文件</code> 中的 <code>sidebar</code> 字段来控制侧栏的行为，侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</strong></p>
<ul>
<li><p>设置侧栏的位置，修改 <code>sidebar.position</code> 的值，支持的选项有：</p>
<ul>
<li>  left - 靠左放置</li>
<li>  right - 靠右放置</li>
</ul>
</li>
<li><p>设置侧栏显示的时机，修改 <code>sidebar.display</code> 的值，支持的选项有：</p>
<ul>
<li>  <code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li>
<li>  <code>always</code> - 在所有页面中都显示</li>
<li>  <code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li>
<li>  <code>remove</code> - 完全移除</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></tbody></table></figure>

<h3 id="5、设置头像"><a href="#5、设置头像" class="headerlink" title="5、设置头像"></a>5、设置头像</h3><p><strong>编辑 <code>主题配置文件</code>， 修改字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是</strong>：</p>
<table>
<thead>
<tr>
<th align="left">地址</th>
<th align="left">值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">完整的互联网 URI</td>
<td align="left"><code>http://example.com/avatar.png</code></td>
</tr>
<tr>
<td align="left">站点内的地址</td>
<td align="left">将头像放置主题目录下的 <code>source/uploads/</code> （新建 uploads 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下 配置为：<code>avatar: /images/avatar.png</code></td>
</tr>
</tbody></table>
<blockquote>
<p>  <strong>说明</strong>：注意在主题配置文件中，修改<code>avatar</code>选项内容时，头像链接和<code>#</code>之间需要有一个空格。</p>
</blockquote>
<h3 id="6、设置-RSS"><a href="#6、设置-RSS" class="headerlink" title="6、设置 RSS"></a>6、设置 RSS</h3><p><strong>NexT 中 RSS 有三个设置选项，满足特定的使用场景。 更改 <code>主题配置文件</code>，设定 <code>rss</code> 字段的值</strong>：</p>
<ul>
<li>  <code>false</code>：禁用 RSS，不在页面上显示 RSS 连接。</li>
<li>  留空：使用 Hexo 生成的 Feed 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 插件。</li>
<li>  具体的链接地址：适用于已经烧制过 Feed 的情形</li>
</ul>
<h3 id="7、添加「标签」页面"><a href="#7、添加「标签」页面" class="headerlink" title="7、添加「标签」页面"></a>7、添加「标签」页面</h3><p><strong>新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的</strong>。</p>
<p>**在站点目录下右击鼠标进入命令行，输入命令 <code>hexo new page tags</code> 新建一个页面，命名为 <code>tags</code> **。</p>
<p><strong>在站点目录中依次进入<code>/source/tags</code>目录中，打开<code>index.md</code>文件，修改为以下内容</strong>：</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2021-10-27 22:20:26</span><br><span class="line">type: "tags"</span><br></pre></td></tr></tbody></table></figure>

<h3 id="8、添加「分类」页面"><a href="#8、添加「分类」页面" class="headerlink" title="8、添加「分类」页面"></a>8、添加「分类」页面</h3><p><strong>新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。</strong></p>
<p>**在站点目录下右击鼠标进入命令行，输入命令 <code>hexo new page categories</code> 新建一个页面，命名为 <code>categories</code> **。</p>
<p><strong>在站点目录中依次进入<code>/source/categories</code>目录中，打开<code>index.md</code>文件，修改为一下内容</strong>：</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2021-10-27 22:22:31</span><br><span class="line">type: "categories"</span><br></pre></td></tr></tbody></table></figure>

<h3 id="9、设置代码高亮主题"><a href="#9、设置代码高亮主题" class="headerlink" title="9、设置代码高亮主题"></a>9、设置代码高亮主题</h3><p>**NexT 使用 <a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow Theme</a> 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 <code>normal</code> 主题，可选的值有 <code>normal</code>，<code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code>**：</p>
<table>
<thead>
<tr>
<th align="center"><img src="http://theme-next.iissnan.com/assets/img/tomorrow.png" alt="img"></th>
<th align="center"><img src="http://theme-next.iissnan.com/assets/img/tomorrow-night.png" alt="img"></th>
<th align="center"><img src="http://theme-next.iissnan.com/assets/img/tomorrow-night-blue.png" alt="img"></th>
<th align="center"><img src="http://theme-next.iissnan.com/assets/img/tomorrow-night-bright.png" alt="img"></th>
<th align="center"><img src="http://theme-next.iissnan.com/assets/img/tomorrow-night-eighties.png" alt="img"></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>normal</code></td>
<td align="center"><code>night</code></td>
<td align="center"><code>night blue</code></td>
<td align="center"><code>night bright</code></td>
<td align="center"><code>night eighties</code></td>
</tr>
</tbody></table>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="comment"># 以下选项根据需要自行设置</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  </span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span> </span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="8、添加站点内容搜索功能"><a href="#8、添加站点内容搜索功能" class="headerlink" title="8、添加站点内容搜索功能"></a>8、添加站点内容搜索功能</h3><ul>
<li><p>安装 <code>hexo-generator-searchdb</code>，在站点的目录下右击鼠标打开<code>Git Bash</code>命令行执行以下命令：</p>
  <figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>编辑 <strong>站点配置文件</strong>新增以下内容到任意位置：</p>
  <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>编辑 <strong>主题配置文件</strong>，查找<code>local_search</code>启用本地搜索功能：</p>
  <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h3 id="10、分类页美化"><a href="#10、分类页美化" class="headerlink" title="10、分类页美化"></a>10、分类页美化</h3><p><strong>在 站点目录下依次进行选择<code>themes → next → source → css → _schemes → (自己选择的Scheme)</code> 进入文件夹，用编辑器打开<code>index.styl </code>文件在最后新增如下样式</strong>：</p>
<figure class="highlight stylus"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/* 分类页样式 began */</span></span><br><span class="line"><span class="selector-class">.category-list-link</span>:hover{</span><br><span class="line">  <span class="attribute">transform</span>: scale(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> rgba(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  <span class="comment">//display:flex;</span></span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.category-list-link</span>:before{</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"📚"</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font</span>: normal normal normal <span class="number">14px</span>/<span class="number">1</span> FontAwesome;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/* 分类页样式 end */</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>修改站点目录下的<code>/themes/next/source/css/_common/components/pages/categories.styl</code>代码，将<code>.category-list-child</code>的<code>padding-left</code>属性改为<code>60px</code>，可以更改子类与父类之间的间隔</strong>。</p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031122209809.png" alt="image-20211031122209809"></p>
<p><img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031122308556.png" alt="image-20211031122308556"></p>
<blockquote>
<p>  <strong>补充</strong>：Hexo-Next分类多层级描述</p>
<ol>
<li><p><strong>分类一般用法</strong><br> Hexo中分类和标签有着明显的差别：分类具有顺序性和层次性，也就是说Foo, Bar 不等于Bar, Foo；而标签没有顺序和层次。</p>
 <figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PS3</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Games</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p><strong>父子分类</strong><br> Hexo不支持指定多个同级分类。下面的指定方法会使分类Life成为Diary的子分类，而不是并列分类。</p>
 <figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Life</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p><strong>并列+子分类</strong><br> 如果需要为文章添加多个分类，可以尝试以下 list 中的方法。此时这篇文章同时包括三个分类：PlayStation和Games分别都是父分类Diary的子分类，同时Life是一个没有子分类的分类。</p>
 <figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">Diary</span>, <span class="string">PlayStation</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">Diary</span>, <span class="string">Games</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">Life</span>]</span><br></pre></td></tr></tbody></table></figure></li>
</ol>
</blockquote>
<h3 id="11、标签页美化"><a href="#11、标签页美化" class="headerlink" title="11、标签页美化"></a>11、标签页美化</h3><h3 id="设置首页阅读全文"><a href="#设置首页阅读全文" class="headerlink" title="设置首页阅读全文"></a>设置首页阅读全文</h3><p><strong>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 Next提供三种方式来控制文章在首页的显示方式，在首页显示文章的摘录并显示 <code>阅读全文</code>按钮，可以通过以下方法</strong>：</p>
<ol>
<li><p> 在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断，Hexo提供的方式 <strong>推荐</strong></p>
</li>
<li><p> 在文章的 <a href="https://hexo.io/docs/front-matter.html">front-matter</a> 中添加 <code>description</code>，并提供文章摘录</p>
</li>
<li><p>自动形成摘要，在 <code>主题配置文件</code>中添加：</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<p><strong>本人使用的是第二种，通过添加<code>description</code>的方式设置首页显示每篇博文的内容，因为尝试过第三种方法没有奏效，第一种又比较拉跨。</strong></p>
<h3 id="添加图片放大预览功能"><a href="#添加图片放大预览功能" class="headerlink" title="添加图片放大预览功能"></a>添加图片放大预览功能</h3><p><strong>在<code>主题配置文件</code>中开启<code>fancybox</code>选项：</strong></p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="设置博客文章持久化链接"><a href="#设置博客文章持久化链接" class="headerlink" title="设置博客文章持久化链接"></a>设置博客文章持久化链接</h3><ol>
<li><p> 在命令行中输入<code>cnpm install hexo-abbrlink --save</code>命令安装<code>hexo-abbrlink</code>插件</p>
</li>
<li><p>站点配置文件<code>_config.yml</code>修改<code>permalink</code>选项，修改内容如下：</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">post/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span> <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<blockquote>
<p>  <strong>说明</strong>：需要注意，如果 <code>permalink</code> 设置为 <code>post/:abbrlink.html</code> 可能导致本地图片加载失败，尽量使用<a href="https://dongqing1903.github.io/post/44503.html#2%E3%80%81%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8OSS%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A%E7%9A%84%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D">图床</a>来管理自己的图片。</p>
</blockquote>
<h3 id="设置回到顶部按钮"><a href="#设置回到顶部按钮" class="headerlink" title="设置回到顶部按钮"></a>设置回到顶部按钮</h3><p><strong>修改主题配置文件 <code>_config.yml</code> 中的<code>back2top</code> 选项，设置内容如下</strong>：</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 将返回按钮设置在侧边栏</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 按钮上显示进度百分比</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h3><p><strong>在站点目录下的<code>source</code>目录中创建<code>_data</code> 目录，在<code>_data</code>目录下新建 <code>styles.styl</code> 文件，填入下面内容</strong>：</p>
<figure class="highlight stylus"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 修改链接样式</span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> a{</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="selector-pseudo">&amp;:hover</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> {</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="selector-pseudo">&amp;:hover</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><strong>主题配置文件 <code>_config.yml</code> 去除 <code>styles.styl</code> 的注释</strong></p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></tbody></table></figure>

<img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031151345121.png" alt="image-20211031151345121" style="zoom:67%;">



<h3 id="去掉顶部黑线"><a href="#去掉顶部黑线" class="headerlink" title="去掉顶部黑线"></a>去掉顶部黑线</h3><p><strong>在站点目录下的 <code>/source/_data/styles.styl</code> 文件加入下面样式</strong>：</p>
<figure class="highlight stylus"><table><tbody><tr><td class="code"><pre><span class="line">  <span class="comment">//去掉顶部黑线：</span></span><br><span class="line"><span class="selector-class">.headband</span> {<span class="attribute">display</span>:none;}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>  <strong>说明</strong>：如果没有<code>styles.styl</code>文件，则需要新建，并且需要在主题配置文中去除 <code>styles.styl</code> 的注释，参考上一步操作。</p>
</blockquote>
<h3 id="更换Hexo的网页图标"><a href="#更换Hexo的网页图标" class="headerlink" title="更换Hexo的网页图标"></a>更换Hexo的网页图标</h3><p><strong>当套用完Next主题后，个人博客的站点图标会自动为Next的logo</strong></p>
<ol>
<li><p>  制作favicon图标，这里提供一种制作方法<a href="https://www.bitbug.net/">链接</a>，将下载好的图片分别命名为<code>favicon16.ico</code>和<code>favicon32.ico</code>，并将修改后的图片复制到<code>/themes/next/source/images</code>目录中</p>
</li>
<li><p>打开next主题的<code>_config.yml</code>文件，<code>favicon:</code>有以下内容：</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span>  </span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json  </span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>将步骤2中的对应内容修改为以下内容：</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon16.ico</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon32.ico</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p> 在命令行中依次输入<code>hexo clean, hexo g, hexo d, hexo s</code>就可以在本地和远端看到自己的站点图标变成自己设置的图标</p>
</li>
</ol>
<h3 id="增加Valine评论功能"><a href="#增加Valine评论功能" class="headerlink" title="增加Valine评论功能"></a>增加Valine评论功能</h3><ol>
<li><p> 注册leancloud，<a href="https://leancloud.cn/dashboard/login.html#/signin">leancloud注册网址</a></p>
</li>
<li><p>注册登陆后，访问控制台，创建应用，选择开发版，创建好之后就生成了对应的id和key</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031140044606.png" alt="image-20211031140044606"></p>
</li>
<li><p>在<code>主题配置文件</code>中进行修改 Valine，<code>enable、appid、appkey</code>三个选项的内容是必须修改的，分别对应步骤2中的注册信息，其他选项根据自己需求设置，修改内容如下所示：</p>
 <figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">appid:</span>                      <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span>                     <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span>  <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>修改完成后，在命令行中依次执行<code>hexo clean, hexo g, hexo d, hexo s</code>就可以在本地和远端看到评论</p>
<p> <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031141957750.png" alt="image-20211031141957750"></p>
<blockquote>
<p>  <strong>说明</strong>：</p>
<ul>
<li><p>  在自己写的博文的<a href="https://hexo.io/docs/front-matter.html">front-matter</a>中可以通过增加<code>comments: true/false</code>来选择打开和关闭本页面对应的评论区。</p>
</li>
<li><p>打开站点目录下的<code>source</code>目录，对目录页分别进行评论区屏蔽设置，否则在标签页、分类页等都会存在评论区，此处以<code>tags</code>项为例，打开<code>/tags/index.md</code>，内容如下：</p>
<p>  <img src="https://dongqing1903.oss-cn-shanghai.aliyuncs.com/img/image-20211031142902132.png" alt="image-20211031142902132"></p>
</li>
</ul>
</blockquote>
</li>
</ol>
<h3 id="添加emoji表情渲染器"><a href="#添加emoji表情渲染器" class="headerlink" title="添加emoji表情渲染器"></a>添加<code>emoji</code>表情渲染器</h3><p><strong>在命令行输入<code>cnpm install hexo-filter-github-emojis --save</code>安装<code>hexo-filter-github-emojis</code>插件</strong>。</p>
<p><strong>在站点配置文件中添加如下内容</strong>：</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">unicode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">localEmojis:</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="文章置顶问题"><a href="#文章置顶问题" class="headerlink" title="文章置顶问题"></a>文章置顶问题</h3><p><strong>修改站点目录下的<code>node_modules/hexo-generator-index/lib/generator.js</code>文件，需要添加如下内容</strong>：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span>(a.top &amp;&amp; b.top) { <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">        <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) { <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
        <category>业余笔记</category>
        <category>博客相关</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>技能</tag>
      </tags>
  </entry>
  <entry>
    <title>小强升职记</title>
    <url>/post/33163/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><span id="more"></span>]]></content>
      <categories>
        <category>笔记</category>
        <category>业余笔记</category>
        <category>陶冶情操</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>读物</tag>
      </tags>
  </entry>
</search>
